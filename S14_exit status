# ls -ld /opt /opt1 >/tmp/out 2>/tmp/err        

        command o/p in /tmp/out
        error o/p   in /tmp/err
  
 To save both command and error in same location:
 
          ls -ld /opt /opt1 &>/tmp/out
          
  When we dont want to save o/p and error then we redirect it in /dev/null        
  
           ls -ld /opt &>/dev/null
           
           

# Any command we execute is going to send the exit status to the shell and from that status we can validate whether the command is sucessfully executed or not.

## Exit status is a number 

# Exit states ranges from 0-255

# 0 is globally successful 
# 1-255 is a failure or partially failure or partialy successful 


# As a author of a your own shell scripts you can use the exit status from 1-125
# 125+ are used by system and it is not preferred to use by the user.

## You can send your own exit status by using exit command 

exit 5

## TO refer the exit status we use a variable ?, TO access a ? variable we use $? 

man command will have more description about the command
==================================================================================================================
Quotes:  (29:00 - 40:00)

#!/bin/bash 

echo * 

### Usually keyboard characters other than a-z, 0-9 , _ other than these characters we have more characters like * () and so on are called as special characters . 

## Those special characters are having a special purpose in the system like $ to access a variable 

## Some times this speciual characters need to be avoided and the inputs should be given avoiding their speciality 

# TO do that we have quotes 
## 1. Single Quotes 
#        No Special Characters are treated as special in single quotes 
## 2. Double Quotes 
#        Only $ , ` are treated a special characters and rest other are normal.

ls -ld /opt /opt1 &>/dev/null 
echo 'Exit Status of ls command = $?'

ls -ld /opt /opt1 &>/dev/null 
echo "Exit Status of ls command = $?"

echo "*"

# With out quotes also we can escape special character by using \ 
echo \*

echo -e Hello\\nWorld

## Even in double quotes sometimes you need to skip the speciality of chaaracters 
echo  "Cost of apple is \$100"


